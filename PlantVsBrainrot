```lua
-- üå± Plant Vs Brainrot Full Script
-- H·ªó tr·ª£ PC + Mobile (n√∫t m·ªü menu c√≥ th·ªÉ k√©o th·∫£)

-- üîπ Ki·ªÉm tra game ID
local GameId = game.GameId
if GameId ~= 127742093697776 then
    game:GetService("TeleportService"):Teleport(127742093697776, game.Players.LocalPlayer)
    return
end

local player = game.Players.LocalPlayer
local CoreGui = game:GetService("CoreGui")

-- ===============================
-- ‚è≥ Loading GUI
-- ===============================
local LoadingGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
LoadingGui.Name = "PVZ_Loading"

local Frame = Instance.new("Frame", LoadingGui)
Frame.Size = UDim2.new(0.4, 0, 0.1, 0)
Frame.Position = UDim2.new(0.3, 0, 0.45, 0)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.BorderSizePixel = 0

local Bar = Instance.new("Frame", Frame)
Bar.Size = UDim2.new(0, 0, 1, 0)
Bar.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
Bar.BorderSizePixel = 0

local Label = Instance.new("TextLabel", Frame)
Label.Size = UDim2.new(1, 0, 1, 0)
Label.BackgroundTransparency = 1
Label.Text = "Loading... 0%"
Label.TextColor3 = Color3.fromRGB(255, 255, 255)
Label.Font = Enum.Font.SourceSansBold
Label.TextScaled = true

for i = 1,100 do
    Bar.Size = UDim2.new(i/100, 0, 1, 0)
    Label.Text = "Loading... "..i.."%"
    wait(0.03)
end

LoadingGui:Destroy()

-- ===============================
-- üìú Fluent UI
-- ===============================
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Window = Fluent:CreateWindow({
    Title = "üå± Plant Vs Brainrot",
    SubTitle = "by SDVT",
    TabWidth = 120,
    Size = UDim2.fromOffset(500, 350),
    Acrylic = true,
    Theme = "Dark"
})

-- ===============================
-- üõí Tab 1: Shop Seed
-- ===============================
local tab1 = Window:AddTab({ Title = "Shop Seed", Icon = "shopping-cart" })

tab1:AddToggle("Cactus", {Title = "üåµ Cactus Seed", Default = false}):OnChanged(function(state)
    if state then
        local args = {{"Cactus Seed","\a"}}
        game.ReplicatedStorage.BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
    end
end)

tab1:AddToggle("Pumpkin", {Title = "üéÉ Pumpkin Seed", Default = false}):OnChanged(function(state)
    if state then
        local args = {{"Pumpkin Seed","\a"}}
        game.ReplicatedStorage.BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
    end
end)

tab1:AddToggle("Sunflower", {Title = "üåª Sunflower Seed", Default = false}):OnChanged(function(state)
    if state then
        local args = {{"Sunflower Seed","\a"}}
        game.ReplicatedStorage.BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
    end
end)

tab1:AddToggle("DragonFruit", {Title = "üêâ Dragon Fruit Seed", Default = false}):OnChanged(function(state)
    if state then
        local args = {{"Dragon Fruit Seed","\a"}}
        game.ReplicatedStorage.BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
    end
end)

-- ===============================
-- üåæ Tab 2: Collect
-- ===============================
local tab2 = Window:AddTab({ Title = "Collected", Icon = "leaf" })

local delayValue = 2
tab2:AddSlider("DelaySlider", {
    Title = "‚è±Ô∏è Delay",
    Min = 2, Max = 30, Default = 2, Rounding = 0
}):OnChanged(function(value) delayValue = value end)

local running = false
tab2:AddToggle("AutoCollect", {Title = "‚úÖ Collect", Default = false}):OnChanged(function(state)
    running = state
    while running do
        local args = { {[2] = "\004"} } -- collect
        game.ReplicatedStorage.BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
        wait(delayValue)
    end
end)

-- ===============================
-- ‚öîÔ∏è Tab 3: Kill Aura
-- ===============================
local tab3 = Window:AddTab({ Title = "Kill Aura", Icon = "swords" })

local auraRunning = false
tab3:AddToggle("KillAura", {Title = "üíÄ Kill Aura", Default = false}):OnChanged(function(state)
    auraRunning = state
    while auraRunning do
        for _, mob in pairs(workspace:GetChildren()) do
            if mob:FindFirstChild("Humanoid") and mob:FindFirstChild("HumanoidRootPart") and mob.Name ~= player.Name then
                local args = {
                    [1] = mob,
                    [2] = 100
                }
                game.ReplicatedStorage.BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
            end
        end
        wait(0.2)
    end
end)

-- ===============================
-- üì± N√∫t m·ªü/ƒë√≥ng menu (mobile drag)
-- ===============================
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "SeedHubMobile"

local button = Instance.new("TextButton", gui)
button.Size = UDim2.new(0, 100, 0, 40)
button.Position = UDim2.new(0.02, 0, 0.8, 0)
button.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.Font = Enum.Font.SourceSansBold
button.TextSize = 18
button.Text = "üå± Menu"

local opened = true
button.MouseButton1Click:Connect(function()
    opened = not opened
    Window:Minimize(not opened)
end)

-- üî• Drag support
local UserInputService = game:GetService("UserInputService")
local dragging, dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    button.Position = UDim2.new(
        startPos.X.Scale, startPos.X.Offset + delta.X,
        startPos.Y.Scale, startPos.Y.Offset + delta.Y
    )
end

button.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = button.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

button.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)
```
