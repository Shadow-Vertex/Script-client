-- üå± Plant Vs Brainrot Script
-- UI: Rayfield (https://sirius.menu/rayfield)

-- üîí Check Game ID
local correctPlaceId = 127742093697776
if game.PlaceId ~= correctPlaceId then
    warn("‚ùå Sai game, teleport sang "..correctPlaceId)
    game:GetService("TeleportService"):Teleport(correctPlaceId, game.Players.LocalPlayer)
    return
end

-- ‚ö° Fake Loading UI
local CoreGui = game:GetService("CoreGui")
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "PVSB_Loading"
ScreenGui.Parent = CoreGui
ScreenGui.IgnoreGuiInset = true
ScreenGui.ResetOnSpawn = false

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0.4,0,0.05,0)
Frame.Position = UDim2.new(0.3,0,0.45,0)
Frame.BackgroundColor3 = Color3.fromRGB(40,40,40)
Frame.BorderSizePixel = 0
Frame.Parent = ScreenGui

local Bar = Instance.new("Frame")
Bar.Size = UDim2.new(0,0,1,0)
Bar.BackgroundColor3 = Color3.fromRGB(0,255,100)
Bar.BorderSizePixel = 0
Bar.Parent = Frame

local Text = Instance.new("TextLabel")
Text.Size = UDim2.new(0.4,0,0.05,0)
Text.Position = UDim2.new(0.3,0,0.52,0)
Text.BackgroundTransparency = 1
Text.TextColor3 = Color3.fromRGB(255,255,255)
Text.TextScaled = true
Text.Font = Enum.Font.FredokaOne
Text.Text = "Loading... 0%"
Text.Parent = ScreenGui

for i = 1,100 do
    Bar.Size = UDim2.new(i/100,0,1,0)
    Text.Text = "Loading... "..i.."%"
    task.wait(0.02)
end

ScreenGui:Destroy() -- xo√° loading UI xong m·ªõi load menu

-- ‚öôÔ∏è Load UI
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Player = game.Players.LocalPlayer

-- ‚öôÔ∏è Config
local autoBuy, buyDelay = false, 1
local selectedSeeds = {}
local autoCollect, collectDelay = false, 5

-- üå± Danh s√°ch Seed
local seedList = {
    "Cactus Seed",
    "Strawberry Seed",
    "Pumpkin Seed",
    "Sunflower Seed",
    "Dragon Fruit Seed",
    "Eggplant Seed",
    "Watermelon Seed",
    "Cocotank Seed",
    "Carnivorous Plant Seed",
    "Mr Carrot Seed",
    "Tomatrio Seed"
}

-- ü™¥ UI Window
local Window = Rayfield:CreateWindow({
    Name = "üå± Plant Vs Brainrot",
    LoadingTitle = "Plant Vs Brainrot",
    LoadingSubtitle = "by Dev",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "PlantVsBrainrot",
        FileName = "Config"
    }
})

-- =============================
-- üìå Tab 1: Info
-- =============================
local Tab1 = Window:CreateTab("‚ÑπÔ∏è Info")
Tab1:CreateParagraph({
    Title = "üå± Plant Vs Brainrot",
    Content = "Script auto buy & auto collect.\nPlayer: " .. Player.Name .. " | ID: " .. Player.UserId
})

-- =============================
-- üìå Tab 2: Shop Seed
-- =============================
local Tab2 = Window:CreateTab("üõí Shop Seed")

Tab2:CreateSlider({
    Name = "‚è± Buy Delay",
    Range = {0.01, 2},
    Increment = 0.01,
    Suffix = "s",
    CurrentValue = 1,
    Callback = function(Value) buyDelay = Value end,
})

for _, seedName in ipairs(seedList) do
    Tab2:CreateToggle({
        Name = seedName,
        CurrentValue = false,
        Callback = function(Value)
            selectedSeeds[seedName] = Value
        end,
    })
end

Tab2:CreateToggle({
    Name = "üå± Auto Buy Seeds",
    CurrentValue = false,
    Callback = function(Value)
        autoBuy = Value
        if autoBuy then
            task.spawn(function()
                while autoBuy do
                    for seed, enabled in pairs(selectedSeeds) do
                        if enabled then
                            local args = { {seed, "\7"} }
                            pcall(function()
                                ReplicatedStorage.BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
                            end)
                            task.wait(buyDelay)
                        end
                    end
                    task.wait()
                end
            end)
        end
    end,
})

-- =============================
-- üìå Tab 3: Collected
-- =============================
local Tab3 = Window:CreateTab("üì¶ Collected")

Tab3:CreateSlider({
    Name = "‚è± Collect Delay",
    Range = {2, 30},
    Increment = 1,
    Suffix = "s",
    CurrentValue = 5,
    Callback = function(Value) collectDelay = Value end,
})

Tab3:CreateToggle({
    Name = "üì¶ Auto Collect",
    CurrentValue = false,
    Callback = function(Value)
        autoCollect = Value
        if autoCollect then
            task.spawn(function()
                while autoCollect do
                    local args = { {[2] = "5"} }
                    pcall(function()
                        ReplicatedStorage.BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
                    end)
                    task.wait(collectDelay)
                end
            end)
        end
    end,
})
