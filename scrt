-- Auto reload script khi rejoin/hop sv + Auto click gi·ªØa m√†n h√¨nh + Speed Hub X
-- By ChatGPT

math.randomseed(tick())

local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local VirtualUser = game:GetService("VirtualUser")
local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

-- ‚öôÔ∏è C·∫•u h√¨nh
getgenv().AutoLoad = false -- üî¥ t·∫Øt auto load (true = b·∫≠t, false = b·∫≠t)
local SCRIPT_URL = "https://raw.githubusercontent.com/Shadow-Vertex/Script-client/refs/heads/main/scrt"

-- üü¢ Key & Load Speed Hub X
getgenv().script_key = "BvMJeyLAFaEyOrZzQKEubHVRPVeMVzSn"
local ok, err = pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Speed-Hub-X/main/Speed%20Hub%20X.lua"))()
end)
if not ok then
    warn("Load Speed Hub X failed:", err)
end

local function notify(title, text)
    pcall(function()
        StarterGui:SetCore("SendNotification", {Title = title, Text = text, Duration = 4})
    end)
end

-- üñ± Click 1 l·∫ßn gi·ªØa m√†n h√¨nh khi script ch·∫°y
task.spawn(function()
    task.wait(0.5)
    local center = camera.ViewportSize / 2
    VirtualUser:Button1Down(center)
    task.wait(0.05)
    VirtualUser:Button1Up(center)
end)

-- üñ± Auto click gi·ªØa m√†n h√¨nh 10 l·∫ßn/s
task.spawn(function()
    while task.wait(0.1) do
        pcall(function()
            local center = camera.ViewportSize / 2
            VirtualUser:Button1Down(center)
            task.wait(0.02)
            VirtualUser:Button1Up(center)
        end)
    end
end)

-- üîç T√¨m server kh√°c
local function findOtherServer()
    local candidates, cursor, tries = {}, nil, 0
    repeat
        local url = "https://games.roblox.com/v1/games/"..tostring(game.PlaceId).."/servers/Public?limit=100"
        if cursor and cursor ~= "" then
            url = url .. "&cursor=" .. tostring(cursor)
        end

        local ok, res = pcall(function() return game:HttpGet(url) end)
        if not ok or not res or res == "" then
            return nil, "HttpGet failed"
        end

        local data
        local decodeOk = pcall(function() data = HttpService:JSONDecode(res) end)
        if not decodeOk then return nil, "JSON decode failed" end

        for _, s in ipairs(data.data or {}) do
            if tostring(s.id) ~= tostring(game.JobId) and (s.playing < s.maxPlayers) then
                table.insert(candidates, s.id)
            end
        end

        cursor = data.nextPageCursor
        tries += 1
    until not cursor or cursor == "" or tries >= 6

    if #candidates == 0 then
        return nil, "Kh√¥ng t√¨m ƒë∆∞·ª£c server kh√°c."
    end
    return candidates[math.random(1, #candidates)]
end

-- üîÑ Rejoin/hop server
local function attemptRejoin()
    notify("Rejoin", "ƒêang t√¨m server m·ªõi...")
    local serverId, err = findOtherServer()
    if serverId then
        local ok, terr = pcall(function()
            TeleportService:TeleportToPlaceInstance(game.PlaceId, serverId, player)
        end)
        if not ok then
            warn("TeleportToPlaceInstance l·ªói:", terr)
            notify("Rejoin", "Th·ª≠ Teleport()...")
            pcall(function() TeleportService:Teleport(game.PlaceId) end)
        end
    else
        warn("Kh√¥ng t√¨m server:", err)
        notify("Rejoin", "Th·ª≠ Teleport()...")
        pcall(function() TeleportService:Teleport(game.PlaceId) end)
    end
end

-- üïí Sau 20s s·∫Ω rejoin v√† (n·∫øu AutoLoad = true) th√¨ load l·∫°i script
task.delay(20, function()
    attemptRejoin()
    task.wait(3)
    if getgenv().AutoLoad then
        pcall(function()
            loadstring(game:HttpGet(SCRIPT_URL))()
        end)
    else
        notify("AutoLoad", "ƒêang t·∫Øt, kh√¥ng t·ª± load l·∫°i script.")
    end
end)
